<?php

namespace DoctrineORMModule\Proxy\__CG__\API\V1\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Clinic extends \API\V1\Entity\Clinic implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'id', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'name', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'pesquisaPet', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'document', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'phone', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'creation', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'manager', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'distributor', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'employees', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'nursery', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'address', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'photo', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'pets', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'deleted', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'verified', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'homologadoPor', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'config'];
        }

        return ['__isInitialized__', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'id', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'name', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'pesquisaPet', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'document', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'phone', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'creation', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'manager', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'distributor', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'employees', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'nursery', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'address', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'photo', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'pets', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'deleted', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'verified', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'homologadoPor', '' . "\0" . 'API\\V1\\Entity\\Clinic' . "\0" . 'config'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Clinic $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function addEmployee(\API\V1\Entity\Employee $employee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEmployee', [$employee]);

        return parent::addEmployee($employee);
    }

    /**
     * {@inheritDoc}
     */
    public function getPetsCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPetsCount', []);

        return parent::getPetsCount();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone', []);

        return parent::getPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreation', []);

        return parent::getCreation();
    }

    /**
     * {@inheritDoc}
     */
    public function getManager()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getManager', []);

        return parent::getManager();
    }

    /**
     * {@inheritDoc}
     */
    public function getDistributor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDistributor', []);

        return parent::getDistributor();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmployees()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmployees', []);

        return parent::getEmployees();
    }

    /**
     * {@inheritDoc}
     */
    public function getNursery()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNursery', []);

        return parent::getNursery();
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', []);

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function getPhoto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhoto', []);

        return parent::getPhoto();
    }

    /**
     * {@inheritDoc}
     */
    public function getPets()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPets', []);

        return parent::getPets();
    }

    /**
     * {@inheritDoc}
     */
    public function getDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeleted', []);

        return parent::getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone($phone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone', [$phone]);

        return parent::setPhone($phone);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreation($creation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreation', [$creation]);

        return parent::setCreation($creation);
    }

    /**
     * {@inheritDoc}
     */
    public function setManager($manager)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setManager', [$manager]);

        return parent::setManager($manager);
    }

    /**
     * {@inheritDoc}
     */
    public function setDistributor($distributor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDistributor', [$distributor]);

        return parent::setDistributor($distributor);
    }

    /**
     * {@inheritDoc}
     */
    public function setEmployees($employees)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmployees', [$employees]);

        return parent::setEmployees($employees);
    }

    /**
     * {@inheritDoc}
     */
    public function setNursery($nursery)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNursery', [$nursery]);

        return parent::setNursery($nursery);
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress($address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', [$address]);

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function setPhoto($photo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhoto', [$photo]);

        return parent::setPhoto($photo);
    }

    /**
     * {@inheritDoc}
     */
    public function setPets($pets)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPets', [$pets]);

        return parent::setPets($pets);
    }

    /**
     * {@inheritDoc}
     */
    public function setDeleted($deleted)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeleted', [$deleted]);

        return parent::setDeleted($deleted);
    }

    /**
     * {@inheritDoc}
     */
    public function getVerified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVerified', []);

        return parent::getVerified();
    }

    /**
     * {@inheritDoc}
     */
    public function setVerified($verified)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVerified', [$verified]);

        return parent::setVerified($verified);
    }

    /**
     * {@inheritDoc}
     */
    public function getDocument()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocument', []);

        return parent::getDocument();
    }

    /**
     * {@inheritDoc}
     */
    public function setDocument($document)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDocument', [$document]);

        return parent::setDocument($document);
    }

    /**
     * {@inheritDoc}
     */
    public function getPesquisaPet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPesquisaPet', []);

        return parent::getPesquisaPet();
    }

    /**
     * {@inheritDoc}
     */
    public function setPesquisaPet($pesquisaPet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPesquisaPet', [$pesquisaPet]);

        return parent::setPesquisaPet($pesquisaPet);
    }

    /**
     * {@inheritDoc}
     */
    public function getHomologadoPor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHomologadoPor', []);

        return parent::getHomologadoPor();
    }

    /**
     * {@inheritDoc}
     */
    public function setHomologadoPor($homologadoPor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHomologadoPor', [$homologadoPor]);

        return parent::setHomologadoPor($homologadoPor);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfig()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfig', []);

        return parent::getConfig();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfig($config)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfig', [$config]);

        return parent::setConfig($config);
    }

}
